FROM python:3.7-buster
COPY . /aries-backchannels
WORKDIR /aries-backchannels
RUN pip install -r requirements.txt
RUN pip install -r requirements-vcx.txt

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CE7709D068DB5E88 \
   && apt-get update \
   && apt-get install -y software-properties-common \
   && apt-get update \
   && add-apt-repository 'deb https://repo.sovrin.org/sdk/deb bionic stable' \
   && apt-get update \
   && apt-get install -y libindy \
   && apt-get install -y libnullpay \
   && apt-get install -y libvcx \
   && apt-get install -y indy-cli

# jump through some hoops to get a dummy cloud agent
RUN mkdir -p ./bin

RUN apt-get update -y
RUN apt-get install -y --no-install-recommends \
        automake \
        bison \
        build-essential \
        ca-certificates \
        cmake \
        curl \
        flex \
        git \
        libbz2-dev \
        libffi-dev \
        libgmp-dev \
        liblzma-dev \
        libncurses5-dev \
        libncursesw5-dev \
        libreadline-gplv2-dev \
        libsecp256k1-dev \
        libsqlite3-dev \
        libssl-dev \
        libtool \
        libzmq3-dev \
        pkg-config \
        zlib1g-dev

# set to --release for smaller, optimized library
ARG indy_build_flags=--release

# from the build for the above image, make sure we get a matching indy-sdk version
ARG indy_sdk_url=https://codeload.github.com/hyperledger/indy-sdk/tar.gz/v1.15.0

ARG rust_version=1.37.0

ENV LIBRARY_PATH="$HOME/.local/lib:$LIBRARY_PATH"

# Install rust toolchain
RUN curl -o rustup https://sh.rustup.rs && \
    chmod +x rustup && \
    ./rustup --default-toolchain "${rust_version}" -y
ENV PATH="$HOME/.cargo/bin:$PATH"

# Download and extract indy-sdk
RUN mkdir indy-sdk && \
    curl "${indy_sdk_url}" | tar -xz -C indy-sdk

# install vcx-related libraries
RUN cd ./indy-sdk/indy-sdk*/vcx/dummy-cloud-agent && \
    $HOME/.cargo/bin/cargo build ${indy_build_flags} && \
    mv target/*/indy-dummy-agent "/aries-backchannels/bin/" 

ENV RUNMODE=docker

#aca-py is in /usr/local/bin. The Backchannel is looking for it in ./bin, create a link to it in ./bin
RUN ln -s /usr/local/bin/aca-py ./bin/aca-py
